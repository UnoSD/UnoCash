parameters:
  - name: pulumi_backend_resource_group
    type: string
    default: Pulumi
    
  - name: pulumi_backend_location
    type: string
    default: WestEurope

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureCLI@2
  displayName: Create Pulumi backend storage account
  env:
    PULUMI_CONFIG_PASSPHRASE:
    AZURE_STORAGE_ACCOUNT: $(backend-storage-account-name)
  inputs:
    azureSubscription: $(azure-subscription)
    scriptType: bash
    scriptLocation: inlineScript
    addSpnToEnvironment: true
    inlineScript: |
      az group create \
        -l ${{ parameters.pulumi_backend_location }} \
        -n ${{ parameters.pulumi_backend_resource_group }}
      az storage account create \
        -n $(backend-storage-account-name) \
        -g ${{ parameters.pulumi_backend_resource_group }} \
        -l ${{ parameters.pulumi_backend_location }} \
        --sku Standard_LRS
      az storage container create \
        -n unocash \
        --account-name $(backend-storage-account-name)
      az keyvault create \
        --location ${{ parameters.pulumi_backend_location }} \
        --name $(secrets-provider-keyvault-name) \
        --resource-group ${{ parameters.pulumi_backend_resource_group }}
      az keyvault set-policy \
        --name unocashpulumi \
        --key-permissions encrypt \
        --object-id $(az ad sp show --id $servicePrincipalId --query objectId -o tsv)
      az keyvault key create \
        --name pulumi \
        --vault-name $(secrets-provider-keyvault-name)
      
      export SAS_END=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
      export AZURE_STORAGE_SAS_TOKEN=$(az storage account generate-sas --permissions cdlruwap --account-name $(backend-storage-account-name) --services b --resource-types sco --expiry $SAS_END -o tsv)
      export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
      
      export ARM_CLIENT_ID="$servicePrincipalId"
      export ARM_CLIENT_SECRET="$servicePrincipalKey"
      export ARM_TENANT_ID="$tenantId"
      export PATH="$PATH:/home/vsts/.pulumi/bin"
      
      curl -fsSL https://get.pulumi.com | sh
      
      pulumi login -c azblob://unocash -C UnoCash.Pulumi
      pulumi stack select dev -c -C UnoCash.Pulumi --secrets-provider="azurekeyvault://$(secrets-provider-keyvault-name).vault.azure.net/keys/pulumi"

      pulumi preview -C UnoCash.Pulumi