parameters:
  - name: pulumi_backend_resource_group
    type: string
    default: Pulumi
    
  - name: pulumi_backend_location
    type: string
    default: WestEurope
    
  - name: pulumi_keyvault_key
    type: string
    default: pulumi
    
  - name: secrets_provider_keyvault_name
    type: string
    default: $(secrets-provider-keyvault-name)

  - name: backend_storage_account_name
    type: string
    default: $(backend-storage-account-name)
    
  - name: azure_subscription
    type: string
    default: $(azure-subscription)

pool:
  vmImage: ubuntu-latest

steps:

- task: DotNetCoreCLI@2
  displayName: Publish Function API
  inputs:
    command: publish
    publishWebProjects: false
    projects: UnoCash.Api/UnoCash.Api.csproj
    zipAfterPublish: false

- task: AzureCLI@2
  displayName: Create Pulumi backend storage
  env:
    PULUMI_CONFIG_PASSPHRASE:
    AZURE_STORAGE_ACCOUNT: ${{ parameters.backend_storage_account_name }}
  inputs:
    azureSubscription: ${{ parameters.azure_subscription }}
    scriptType: bash
    scriptLocation: inlineScript
    addSpnToEnvironment: true
    inlineScript: |
      az group create \
        -l ${{ parameters.pulumi_backend_location }} \
        -n ${{ parameters.pulumi_backend_resource_group }}
      az storage account create \
        -n ${{ parameters.backend_storage_account_name }} \
        -g ${{ parameters.pulumi_backend_resource_group }} \
        -l ${{ parameters.pulumi_backend_location }} \
        --sku Standard_LRS
      az storage container create \
        -n unocash \
        --account-name ${{ parameters.backend_storage_account_name }}
      az keyvault create \
        --location ${{ parameters.pulumi_backend_location }} \
        --name ${{ parameters.secrets_provider_keyvault_name }} \
        --resource-group ${{ parameters.pulumi_backend_resource_group }}
      az keyvault set-policy \
        --name ${{ parameters.secrets_provider_keyvault_name }} \
        --key-permissions encrypt \
        --object-id $(az ad sp show --id $servicePrincipalId --query objectId -o tsv)
      az keyvault key create \
        --name ${{ parameters.pulumi_keyvault_key }} \
        --vault-name ${{ parameters.secrets_provider_keyvault_name }}

      export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
      export SAS_END=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
      export AZURE_STORAGE_SAS_TOKEN=$(az storage account generate-sas \
        --permissions cdlruwap \
        --account-name ${{ parameters.backend_storage_account_name }} \
        --services b \
        --resource-types co \
        --expiry $SAS_END \
        -o tsv)
            
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      export PATH="$PATH:/home/vsts/.pulumi/bin"
      export KEYVAULT="${{ parameters.secrets_provider_keyvault_name }}.vault.azure.net"
      
      curl -fsSL https://get.pulumi.com | sh
      
      pulumi login -c azblob://unocash -C UnoCash.Pulumi
      
      pulumi stack select dev \
        -c \
        -C UnoCash.Pulumi \
        --secrets-provider="azurekeyvault://$KEYVAULT/keys/pulumi"

      pulumi up -C UnoCash.Pulumi --yes
