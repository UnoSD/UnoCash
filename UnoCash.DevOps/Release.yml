parameters:
  - name: pulumi_backend_resource_group
    type: string
    default: Pulumi
    
  - name: pulumi_backend_location
    type: string
    default: WestEurope
    
  - name: pulumi_keyvault_key
    type: string
    default: pulumi
    
  - name: secrets_provider_keyvault_name
    type: string
    default: $(secrets-provider-keyvault-name)

  - name: backend_storage_account_name
    type: string
    default: $(backend-storage-account-name)
    
  - name: azure_subscription
    type: string
    default: $(azure-subscription)
    
  - name: dns_zone_resource_group
    type: string
    default: $(dns-zone-resource-group)
    
  - name: dns_zone_name
    type: string
    default: $(dns-zone-name)
               
  - name: dns_record_name
    type: string
    default: $(dns-record-name)

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - UnoCash.Pulumi/*
      - UnoCash.DevOps/Release.yml

resources:
  pipelines:
    - pipeline: Build-resource
      source: Build
      trigger:
        branches:
          include:
            - master

pool:
  vmImage: ubuntu-latest

stages:

- stage: Set_up
  displayName: Set up deployment resources
  dependsOn: []
  jobs:
    - job: Pulumi
      steps:
      - task: Cache@2
        displayName: Cache Pulumi installation
        inputs:
          key: pulumi
          path: /home/vsts/.pulumi
          cacheHitVar: pulumi_installed
            
      - task: AzureCLI@2
        displayName: Install Pulumi
        condition: ne(variables.pulumi_installed, 'true')
        inputs:
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            curl -fsSL https://get.pulumi.com | sh
            
      - task: AzureCLI@2
        displayName: Create backend storage
        env:
          PULUMI_CONFIG_PASSPHRASE:
          AZURE_STORAGE_ACCOUNT: ${{ parameters.backend_storage_account_name }}
        inputs:
          azureSubscription: ${{ parameters.azure_subscription }}
          scriptType: bash
          scriptLocation: inlineScript
          addSpnToEnvironment: true
          inlineScript: |
            az group create \
              -l ${{ parameters.pulumi_backend_location }} \
              -n ${{ parameters.pulumi_backend_resource_group }}
            az storage account create \
              -n ${{ parameters.backend_storage_account_name }} \
              -g ${{ parameters.pulumi_backend_resource_group }} \
              -l ${{ parameters.pulumi_backend_location }} \
              --sku Standard_LRS
            az storage container create \
              -n unocash \
              --account-name ${{ parameters.backend_storage_account_name }}
            az keyvault create \
              --location ${{ parameters.pulumi_backend_location }} \
              --name ${{ parameters.secrets_provider_keyvault_name }} \
              --resource-group ${{ parameters.pulumi_backend_resource_group }}
            az keyvault set-policy \
              --name ${{ parameters.secrets_provider_keyvault_name }} \
              --key-permissions encrypt \
              --object-id $(az ad sp show --id $servicePrincipalId --query objectId -o tsv)
            az keyvault key create \
              --name ${{ parameters.pulumi_keyvault_key }} \
              --vault-name ${{ parameters.secrets_provider_keyvault_name }}

            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export SAS_END=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
            export AZURE_STORAGE_SAS_TOKEN=$(az storage account generate-sas \
              --permissions cdlruwap \
              --account-name ${{ parameters.backend_storage_account_name }} \
              --services b \
              --resource-types co \
              --expiry $SAS_END \
              -o tsv)

            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$tenantId
            export PATH="$PATH:/home/vsts/.pulumi/bin"
            export KEYVAULT="${{ parameters.secrets_provider_keyvault_name }}.vault.azure.net"

            pulumi login -c azblob://unocash -C UnoCash.Pulumi

            pulumi stack select dev \
              -c \
              -C UnoCash.Pulumi \
              --secrets-provider="azurekeyvault://$KEYVAULT/keys/pulumi"

- stage: Development_preview
  displayName: Development preview
  dependsOn: Set_up
  jobs:
    - job: Preview
      steps:
        - checkout: self
          submodules: true
          
        - task: DownloadPipelineArtifact@2
          displayName: Download build artifacts for Fable
          inputs:
            source: specific
            project: $(resources.pipeline.Build-resource.projectID)
            pipeline: $(resources.pipeline.Build-resource.pipelineID)
            preferTriggeringPipeline: true
            runVersion: latest
            artifact: UnoCash.Fulma
            path: $(System.ArtifactsDirectory)/UnoCash.Fulma
            
        - task: DownloadPipelineArtifact@2
          displayName: Download build artifacts for API
          inputs:
            source: specific
            project: $(resources.pipeline.Build-resource.projectID)
            pipeline: $(resources.pipeline.Build-resource.pipelineID)
            preferTriggeringPipeline: true
            runVersion: latest
            artifact: UnoCash.Api
            path: $(System.ArtifactsDirectory)/UnoCash.Api
          
        - task: AzureCLI@2
          displayName: Pulumi preview
          env:
            PULUMI_CONFIG_PASSPHRASE:
            AZURE_STORAGE_ACCOUNT: ${{ parameters.backend_storage_account_name }}
          inputs:
            azureSubscription: ${{ parameters.azure_subscription }}
            scriptType: bash
            scriptLocation: inlineScript
            addSpnToEnvironment: true
            inlineScript: |
              export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
              export SAS_END=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
              export AZURE_STORAGE_SAS_TOKEN=$(az storage account generate-sas \
                --permissions lr \
                --account-name ${{ parameters.backend_storage_account_name }} \
                --services b \
                --resource-types co \
                --expiry $SAS_END \
                -o tsv)
  
              export ARM_CLIENT_ID=$servicePrincipalId
              export ARM_CLIENT_SECRET=$servicePrincipalKey
              export ARM_TENANT_ID=$tenantId
              export PATH="$PATH:/home/vsts/.pulumi/bin"
              export KEYVAULT="${{ parameters.secrets_provider_keyvault_name }}.vault.azure.net"
  
              curl -fsSL https://get.pulumi.com | sh
  
              pulumi login -c azblob://unocash -C UnoCash.Pulumi
  
              pulumi stack select dev \
                -C UnoCash.Pulumi \
                --secrets-provider="azurekeyvault://$KEYVAULT/keys/pulumi"
  
              pulumi config set ApiBuild "$(System.ArtifactsDirectory)/UnoCash.Api/UnoCash.Api.zip" -C UnoCash.Pulumi
              pulumi config set WebEndpoint "https://${{ parameters.dns_record_name }}.${{ parameters.dns_zone_name }}" -C UnoCash.Pulumi
              
              pulumi preview -C UnoCash.Pulumi
              
              pulumi preview -C UnoCash.Pulumi --diff

- stage: Development_deploy
  displayName: Development deploy
  dependsOn: Development_preview
  jobs:
    - deployment: Up
      environment: dev
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              submodules: true
                
            - task: DownloadPipelineArtifact@2
              displayName: Download build artifacts for Fable
              inputs:
                source: specific
                project: $(resources.pipeline.Build-resource.projectID)
                pipeline: $(resources.pipeline.Build-resource.pipelineID)
                preferTriggeringPipeline: true
                runVersion: latest
                artifact: UnoCash.Fulma
                path: $(System.ArtifactsDirectory)/UnoCash.Fulma
  
            - task: DownloadPipelineArtifact@2
              displayName: Download build artifacts for API
              inputs:
                source: specific
                project: $(resources.pipeline.Build-resource.projectID)
                pipeline: $(resources.pipeline.Build-resource.pipelineID)
                preferTriggeringPipeline: true
                runVersion: latest
                artifact: UnoCash.Api
                path: $(System.ArtifactsDirectory)/UnoCash.Api
                
            - task: AzureCLI@2
              displayName: Pulumi up
              env:
                PULUMI_CONFIG_PASSPHRASE:
                AZURE_STORAGE_ACCOUNT: ${{ parameters.backend_storage_account_name }}
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                addSpnToEnvironment: true
                inlineScript: |
                  export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
                  export SAS_END=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
                  export AZURE_STORAGE_SAS_TOKEN=$(az storage account generate-sas \
                    --permissions lrwc \
                    --account-name ${{ parameters.backend_storage_account_name }} \
                    --services b \
                    --resource-types co \
                    --expiry $SAS_END \
                    -o tsv)
    
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_TENANT_ID=$tenantId
                  export PATH="$PATH:/home/vsts/.pulumi/bin"
                  export KEYVAULT="${{ parameters.secrets_provider_keyvault_name }}.vault.azure.net"
    
                  curl -fsSL https://get.pulumi.com | sh
    
                  pulumi login -c azblob://unocash -C UnoCash.Pulumi
    
                  pulumi stack select dev \
                    -C UnoCash.Pulumi \
                    --secrets-provider="azurekeyvault://$KEYVAULT/keys/pulumi"

                  pulumi config set ApiBuild "$(System.ArtifactsDirectory)/UnoCash.Api/UnoCash.Api.zip" -C UnoCash.Pulumi
                  pulumi config set WebEndpoint "https://${{ parameters.dns_record_name }}.${{ parameters.dns_zone_name }}" -C UnoCash.Pulumi

                  pulumi up -C UnoCash.Pulumi --yes

                  echo "##vso[task.setvariable variable=ResourceGroup]$(pulumi stack output ResourceGroup -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=StorageAccount]$(pulumi stack output StorageAccount -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=ApiManagement]$(pulumi stack output ApiManagement -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=ApiManagementEndpoint]$(pulumi stack output ApiManagementEndpoint -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=StaticWebsiteApi]$(pulumi stack output StaticWebsiteApi -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=FunctionApi]$(pulumi stack output FunctionApi -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=ApplicationId]$(pulumi stack output ApplicationId -C UnoCash.Pulumi)"
                  echo "##vso[task.setvariable variable=FunctionName]$(pulumi stack output FunctionName -C UnoCash.Pulumi)"

                  for i in \
                    StaticWebsiteApiPolicyLink \
                    StaticWebsiteApiPostPolicyLink \
                    StaticWebsiteApiGetPolicyLink \
                    StaticWebsiteApiGetIndexPolicyLink \
                    FunctionApiPolicyLink; do
                    echo "##vso[task.setvariable variable=$i]$(pulumi stack output $i -C UnoCash.Pulumi)"
                  done

            - task: AzureCLI@2
              displayName: Update API Management policies
              env:
                RESOURCE_GROUP: $(ResourceGroup)
                FUNCTION_NAME: $(FunctionName)
                APIM: $(ApiManagement)
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  CURRENT_SUBSCRIPTION=$(az account show --query id -o tsv)
                  
                  API="staticwebsite"
                  LINK="$(StaticWebsiteApiPolicyLink)"
                  
                  az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/apis/$API/policies/policy?api-version=2019-12-01 \
                    --body "{\"properties\":{\"value\":\"$LINK\",\"format\":\"rawxml-link\"}}"

                  OPERATION="get"
                  LINK="$(StaticWebsiteApiGetPolicyLink)"

                  az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/apis/$API/operations/$OPERATION/policies/policy?api-version=2019-12-01 \
                    --body "{\"properties\":{\"value\":\"$LINK\",\"format\":\"rawxml-link\"}}"

                  OPERATION="get-index"
                  LINK="$(StaticWebsiteApiGetIndexPolicyLink)"

                  az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/apis/$API/operations/$OPERATION/policies/policy?api-version=2019-12-01 \
                    --body "{\"properties\":{\"value\":\"$LINK\",\"format\":\"rawxml-link\"}}"


                  OPERATION="post-aad-token"
                  LINK="$(StaticWebsiteApiPostPolicyLink)"

                  az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/apis/$API/operations/$OPERATION/policies/policy?api-version=2019-12-01 \
                    --body "{\"properties\":{\"value\":\"$LINK\",\"format\":\"rawxml-link\"}}"
                  
                  API="api"
                  LINK="$(FunctionApiPolicyLink)"

                  az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/apis/$API/policies/policy?api-version=2019-12-01 \
                    --body "{\"properties\":{\"value\":\"$LINK\",\"format\":\"rawxml-link\"}}"

            - task: AzureCLI@2
              displayName: Update API Management function keys
              env:
                RESOURCE_GROUP: $(ResourceGroup)
                FUNCTION_NAME: $(FunctionName)
                APIM: $(ApiManagement)
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  CURRENT_SUBSCRIPTION=$(az account show --query id -o tsv)
                  
                  az rest \
                    --method post \
                    --uri "/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Web/sites/$FUNCTION_NAME/host/default/listKeys?api-version=2018-11-01" \
                    --query functionKeys.default \
                    -o tsv |
                  xargs -I{} az rest \
                    --method put \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$APIM/namedValues/FunctionKey?api-version=2019-12-01 \
                    --body '{"properties":{"displayName":"FunctionKey","value": "{}","secret":true}}'

            - task: AzureCLI@2
              displayName: Update Azure AD application manifest and optional claims
              env:
                APPLICATION_ID: $(ApplicationId)
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  export OBJECT_ID=$(az ad app show --id $APPLICATION_ID --query objectId -o tsv)
                  export APPLICATION_URL="https://${{ parameters.dns_record_name }}.${{ parameters.dns_zone_name }}"

                  az rest \
                    --method PATCH \
                    --uri https://graph.microsoft.com/v1.0/applications/$OBJECT_ID \
                    --body "$(envsubst < UnoCash.DevOps/AADSpaApplicationManifest.json)"

                  az ad app update \
                    --id $APPLICATION_ID \
                    --optional-claims '{"idToken":[{"name":"upn","essential":true,"additionalProperties":["include_externally_authenticated_upn"]}]}'

            - task: AzureCLI@2
              displayName: Remove subscription required from API Management
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  CURRENT_SUBSCRIPTION=$(az account show --query id -o tsv)

                  az rest \
                    --method patch \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$(ResourceGroup)/providers/Microsoft.ApiManagement/service/$(ApiManagement)/apis/$(StaticWebsiteApi)?api-version=2019-12-01 \
                    --body '{"properties":{"subscriptionRequired":false}}'

                  az rest \
                    --method patch \
                    --uri https://management.azure.com/subscriptions/$CURRENT_SUBSCRIPTION/resourceGroups/$(ResourceGroup)/providers/Microsoft.ApiManagement/service/$(ApiManagement)/apis/$(FunctionApi)?api-version=2019-12-01 \
                    --body '{"properties":{"subscriptionRequired":false}}'

            - task: AzureCLI@2
              displayName: Publish static website to blob storage
              env:
                PULUMI_CONFIG_PASSPHRASE:
                AZURE_STORAGE_ACCOUNT: ${{ parameters.backend_storage_account_name }}
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az storage blob upload-batch \
                    -d '$web' \
                    --account-name $(StorageAccount) \
                    -s "$(System.ArtifactsDirectory)/UnoCash.Fulma"
                  
            - task: AzureCLI@2
              displayName: Add CNAME for API Management
              env:
                ZONE_NAME: ${{ parameters.dns_zone_name }}
                ZONE_RG: ${{ parameters.dns_zone_resource_group }}
                RECORD_NAME: ${{ parameters.dns_record_name }}
              inputs:
                azureSubscription: ${{ parameters.azure_subscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az network dns record-set cname create \
                    --resource-group $ZONE_RG \
                    --zone-name $ZONE_NAME \
                    --name $RECORD_NAME

                  az network dns record-set cname set-record \
                    --resource-group $ZONE_RG \
                    --zone-name $ZONE_NAME \
                    --record-set-name $RECORD_NAME \
                    --cname $(ApiManagement).azure-api.net